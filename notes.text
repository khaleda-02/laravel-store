useing the env('app') in not configuration files , it's not recommended . 
the env just in config files , 

why -> 
in production we cache the config folder , 
so by that the env will be non available 

what to use to get the env values ->
use config('key:app.name')

video 03.1 40:00
---------------------------------------------------------- Breeze --------------------------------------------------------
- Breeze it's a dev dependency  
- download -> composer require laravel/breeze --dev 
- Usage -> usering artisan : php artisan breeze:install 
- removing -> composer remove laravel/breeze 
- Note : the above command will overwrite the web.php file 

---------------------------------------------------------- Commands --------------------------------------------------------
php artisan route:list || php artisan r:l -> get all project's routes 
php artisan db:seed    -> run database Seeds
php artisan make:seeder CategoriesSeeder -> create seeder file    
php artisan storage:link -> IMP make a link (shortlink) in the public folder , so the images and file be accessible in public 
---------------------------------------------------------- files structure --------------------------------------------------------
in controllers -> each domain in file | controllers Dashboard CategoryController.php
in views       -> each controller has folder (file for : index , store , create ... ) | views dashboard categories index.blade.php 


** form method must be in ['post', 'get']
** redirect doesn't take route name , just the rout , recommended : Redirect::route(), or we use route(); 
** Request merge  : the property will not be updated , if we tried to merge an exist property into the request , 
** File Uploading Steps : store the files using public disk in the uploads folder , and then create a link for this folder in the public folder 
** isset() : function return true if the var is exist and not null 

---------------------------------------------------------- References --------------------------------------------------------
custom validation messages : 06.1 1:10 

//todo 
1- validation in controller DONE 
2- error in blade [in style class , the error message (feedback)] DONE 
3- old('inputName',defaultValue)
4- move the rules into the model 
5- unique 57




